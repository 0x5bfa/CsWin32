parameters:
- name: windowsPool
  type: object
  default:
    vmImage: windows-2022
- name: linuxPool
  type: object
  default:
    vmImage: ubuntu-20.04
- name: macOSPool
  type: object
  default:
    vmImage: macOS-12
- name: includeMacOS
  type: boolean
- name: RunTests
  type: boolean
  default: false
- name: artifact_names
  type: object
  default:
  - build_logs
  - coverageResults
  - deployables
  - projectAssetsJson
  - symbols
  - testResults
  - test_symbols
  - Variables

jobs:
- job: Windows
  timeoutInMinutes: 240
  pool: ${{ parameters.windowsPool }}
  variables:
    TestFilter: ""
  ${{ if eq(variables['system.collectionId'], '011b8bdf-6d56-4f87-be0d-0092136884d9') }}:
    templateContext:
      outputParentDirectory: $(Build.ArtifactStagingDirectory)
      outputs:
      - ${{ each artifact_name in parameters.artifact_names }}:
        - output: pipelineArtifact
          displayName: ðŸ“¢ Publish ${{ artifact_name }}-Windows
          targetPath: $(Build.ArtifactStagingDirectory)/${{ artifact_name }}-Windows
          artifactName: ${{ artifact_name }}-Windows
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
    submodules: true

  - template: install-dependencies.yml

  - script: dotnet nbgv cloud -ca
    displayName: âš™ Set build number

  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}

- job: Linux
  timeoutInMinutes: 240
  pool: ${{ parameters.linuxPool }}
  variables:
    TestFilter: "&WindowsOnly!=true"
    Platform: NonWindows
  ${{ if eq(variables['system.collectionId'], '011b8bdf-6d56-4f87-be0d-0092136884d9') }}:
    templateContext:
      outputParentDirectory: $(Build.ArtifactStagingDirectory)
      outputs:
      - ${{ each artifact_name in parameters.artifact_names }}:
        - output: pipelineArtifact
          displayName: ðŸ“¢ Publish ${{ artifact_name }}-Linux
          targetPath: $(Build.ArtifactStagingDirectory)/${{ artifact_name }}-Linux
          artifactName: ${{ artifact_name }}-Linux
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
    submodules: true
  - template: install-dependencies.yml
  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}
  - script: dotnet format --verify-no-changes -v diagnostic
    displayName: ðŸ’… Verify formatted code
    enabled: false # it fails

- job: macOS
  condition: ${{ parameters.includeMacOS }}
  timeoutInMinutes: 240
  pool: ${{ parameters.macOSPool }}
  variables:
    TestFilter: "&WindowsOnly!=true"
    Platform: NonWindows
  ${{ if eq(variables['system.collectionId'], '011b8bdf-6d56-4f87-be0d-0092136884d9') }}:
    templateContext:
      outputParentDirectory: $(Build.ArtifactStagingDirectory)
      outputs:
      - ${{ each artifact_name in parameters.artifact_names }}:
        - output: pipelineArtifact
          displayName: ðŸ“¢ Publish ${{ artifact_name }}-macOS
          targetPath: $(Build.ArtifactStagingDirectory)/${{ artifact_name }}-macOS
          artifactName: ${{ artifact_name }}-macOS
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
    submodules: true
  - template: install-dependencies.yml
  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}

- job: WrapUp
  dependsOn:
  - Windows
  - Linux
  - macOS
  pool: ${{ parameters.windowsPool }} # Use Windows agent because PublishSymbols task requires it (https://github.com/microsoft/azure-pipelines-tasks/issues/13821).
  condition: succeededOrFailed()
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
  - template: install-dependencies.yml
    parameters:
      initArgs: -NoRestore
  - template: publish-symbols.yml
    parameters:
      includeMacOS: ${{ parameters.includeMacOS }}
  - ${{ if parameters.RunTests }}:
    - template: publish-codecoverage.yml
      parameters:
        includeMacOS: ${{ parameters.includeMacOS }}

- ${{ if parameters.RunTests }}:
  - template: integration-test.yml
