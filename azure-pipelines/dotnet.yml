steps:
- script: dotnet build /t:build --no-restore -c $(BuildConfiguration) /v:m /bl:"$(Build.ArtifactStagingDirectory)/build_logs/build.binlog"
  displayName: ðŸ›  dotnet build

- ${{ if eq(variables['system.collectionId'], 'cb55739e-4afe-46a3-970f-1b49d8ee7564') }}:
  - template: ./signstep1.yml

- script: dotnet pack --no-build /p:buildprojectreferences=false -c $(BuildConfiguration) /v:m /bl:"$(Build.ArtifactStagingDirectory)/build_logs/pack.binlog"
  displayName: ðŸ“¦ dotnet pack

- ${{ if eq(variables['system.collectionId'], 'cb55739e-4afe-46a3-970f-1b49d8ee7564') }}:
  - template: ./signstep2.yml

- powershell: azure-pipelines/dotnet-test-cloud.ps1 -Configuration $(BuildConfiguration) -Agent $(Agent.JobName) -PublishResults
  displayName: ðŸ§ª dotnet test

- powershell: azure-pipelines/variables/_pipelines.ps1
  failOnStderr: true
  displayName: âš™ Update pipeline variables based on build outputs
  condition: succeededOrFailed()

- powershell: azure-pipelines/artifacts/_pipelines.ps1 -ArtifactNameSuffix "-$(Agent.JobName)"
  failOnStderr: true
  displayName: ðŸ“¢ Publish artifacts
  condition: succeededOrFailed()

- bash: bash <(curl -s https://codecov.io/bash)
  displayName: ðŸ“¢ Publish code coverage results to codecov.io
  condition: ne(variables['codecov_token'], '')
  timeoutInMinutes: 3
  continueOnError: true
