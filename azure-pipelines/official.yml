trigger:
  batch: true
  branches:
    include:
    - main
    - 'validate/*'
  paths:
    exclude:
    - doc/
    - '*.md'
    - .vscode/
schedules:
- cron: "0 3 * * *" # Daily @ 8 PM PST
  displayName: Daily build
  branches:
    include:
    - main

parameters:
- name: SignSelection
  displayName: Sign?
  type: boolean
  default: false
- name: includeMacOS
  displayName: Build on macOS
  type: boolean
  default: false # macOS is often bogged down in Azure Pipelines
- name: RunTests
  displayName: Run tests
  type: boolean
  default: true

resources:
  repositories:
  - repository: 1esPipelines
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  ${{ if parameters.EnableCompliance }}:
    template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
    parameters:
      stages:
      - stage: Build
        variables:
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
          BuildConfiguration: Release
          NUGET_PACKAGES: $(Agent.TempDirectory)/.nuget/packages
          SignTypeSelection: ${{ parameters.SignTypeSelection }}
          Packaging.EnableSBOMSigning: false
          Codeql.Enabled: true
        jobs:
        - template: /azure-pipelines/build.yml@self
          parameters:
            EnableCompliance: ${{ parameters.EnableCompliance }}
            EnableAPIScan: ${{ parameters.EnableAPIScan }}
            windowsPool:
              name: 1es-managed-pool-ss
              os: windows
            linuxPool:
              name: AzurePipelines-EO
              demands:
              - ImageOverride -equals AzurePipelinesUbuntu20.04compliantGPT
              os: Linux
            macOSPool:
              name: Azure Pipelines
              vmImage: macOS-12
              os: macOS
            includeMacOS: ${{ parameters.includeMacOS }}
            RunTests: ${{ parameters.RunTests }}
      - template: /azure-pipelines/prepare-insertion-stages.yml@self
  ${{ else }}:
    template: v1/1ES.Unofficial.PipelineTemplate.yml@1esPipelines
    parameters:
      sdl:
        sourceAnalysisPool: VSEngSS-MicroBuild2022-1ES
      stages:
      - stage: Build
        variables:
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
          BuildConfiguration: Release
          NUGET_PACKAGES: $(Agent.TempDirectory)/.nuget/packages
          SignTypeSelection: ${{ parameters.SignTypeSelection }}
          Packaging.EnableSBOMSigning: false
          Codeql.Enabled: true
        jobs:
        - template: /azure-pipelines/build.yml@self
          parameters:
            EnableCompliance: ${{ parameters.EnableCompliance }}
            EnableAPIScan: ${{ parameters.EnableAPIScan }}
            windowsPool: VSEngSS-MicroBuild2022-1ES
            linuxPool:
              name: AzurePipelines-EO
              demands:
              - ImageOverride -equals AzurePipelinesUbuntu20.04compliantGPT
              os: Linux
            macOSPool:
              name: Azure Pipelines
              vmImage: macOS-12
              os: macOS
            includeMacOS: ${{ parameters.includeMacOS }}
            RunTests: ${{ parameters.RunTests }}
      - template: /azure-pipelines/prepare-insertion-stages.yml@self
